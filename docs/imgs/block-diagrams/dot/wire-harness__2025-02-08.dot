
//______________________________________________________________________
//______________________________________________________________________
//      _   __   _   _ _   _   _   _         _
// |   |_| | _  | | | V | | | | / |_/ |_| | /
// |__ | | |__| |_| |   | |_| | \ |   | | | \_
//  _  _         _ ___  _       _ ___   _                        / /
// /  | | |\ |  \   |  | / | | /   |   \                        (^^)
// \_ |_| | \| _/   |  | \ |_| \_  |  _/                        (____)o
//______________________________________________________________________
//______________________________________________________________________
//
//----------------------------------------------------------------------
// Copyright 2024, Rebecca Rashkin
// -------------------------------
// This code may be copied, redistributed, transformed, or built upon in
// any format for educational, non-commercial purposes.
//
// Please give me appropriate credit should you choose to use this
// resource. Thank you :)
//----------------------------------------------------------------------
//
//______________________________________________________________________
// //\^.^/\\   //\^.^/\\   //\^.^/\\   //\^.^/\\   //\^.^/\\   //\^.^/\\
//______________________________________________________________________

//______________________________________________________________________
// DESCRIPTION
// This contains a block diagram of the wire harness used in ColorClock.
//
// USAGE
// This file uses preprocessor directives to define constants since the
// DOT language does not have variables or constants.
//
// For this reason, in order to render the image correctly, you must
// first pass this file through cpp. So, to generate the image
// associated with this script, run the following command:
//
// cpp wire-harness__2025-02-08.dot| dot -Tsvg -o wire_harness.svg
//______________________________________________________________________

//______________________________________________________________________
//
//______________________________________________________________________

#include "color-constants.dot"

digraph ColorClockCableHarness
{
  label="ColorClock Wire Harness Configuration"
  fontsize=20
  fontname="Courier New"
  rankdir=LR

  node
  [ fontname="Courier New"
    color=FLUX_BLUE
  ]

  edge
  [ color=FLUX_CYAN
  ]

  subgraph cluster_v1
  {
    label="ColorClock Version 1"
    fontname="Courier New"
    fontsize=16

    electronics_box
    [ shape=polygon
      sides=4
      distortion=0
      label="Electronics\nBox"
    ]

    molex_connector0
    [ shape=polygon
      sides=4
      label="Molex\nConnector"
      fontsize=10
    ]

    molex_connector1
    [ shape=polygon
      sides=4
      label="Molex\nConnector"
      fontsize=10
    ]

    terminal_block
    [ shape=rectangle
      label="Terminal\nBlock\n(on structure)"
      fontsize=10
    ]

    light_display
    [ shape=circle
      label="ColorClock\nLight Display"
    ]

    position_node_top
    [ shape=point
      width=0
      style=invis
    ]

  }

  // TODO make these not copies
  subgraph cluster_home_display
  {
    label="Home Display"
    rank=LR
    fontsize=16

    electronics_box_
    [ shape=polygon
      sides=4
      distortion=0
      label="Electronics\nBox"
    ]

    light_display_
    [ shape=circle
      label="ColorClock\nLight Display"
    ]

    terminal_block_
    [ shape=rectangle
      label="Terminal\nBlock\n(on light display)"
      fontsize=10
    ]

    position_node_bottom
    [ shape=point
      width=0
      style=invis
    ]

  }

    light_display     -> terminal_block   [arrowhead=none]
    terminal_block    -> molex_connector1 [arrowhead=none]
    molex_connector1  -> molex_connector0 [arrowhead=none]
    molex_connector0  -> electronics_box  [arrowhead=none]

    light_display_    -> terminal_block_  [arrowhead=none]
    terminal_block_   -> electronics_box_ [arrowhead=none]

    position_node_top -> position_node_bottom
    [ style=invis
      weight=100
      lhead="cluster_home_display"
      ltail="cluster_v1"
    ]
}
